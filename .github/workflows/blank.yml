# This is a basic workflow to help you get started with Actions

name: CI/CD

permissions:
  pull-requests: write
  issues: write
  repository-projects: write
  statuses: write

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
   push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  lint:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      # Runs a single command using the runners shell
      - name: Lint
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Lint2
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
          
  build-push-image:
       
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      permissions: write-all
      needs: lint
      steps:
      - uses: actions/checkout@v4
         # Runs a single command using the runners shell
      - name: Login to image registry
        uses: docker/login-action@v3
        with:
         username: ${{ secrets.DOCKERHUB_USERNAME }}
         password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push to dockerhub
        uses: docker/build-push-action@v6
        with:
         context: .
         push: true
         tags: omniregistry/back-end:${{ github.sha }}
      - name: SetCommitStatus
        uses: myrotvorets/set-commit-status-action@master
        with:
        #   token: ${{ secrets.TOKEN }}
           status: success
           context: BuildImage
           sha: ${{ github.sha }}
           description: omniregistry/back-end:${{ github.sha }}
      - name: Set Commit Status Omnilogy
        uses: omnilogy-pl/set-status-of-commit@1.1.0
        with:
           token: ${{ secrets.GITHUB_TOKEN }}
           artifacts: omniregistry/back-end:${{ github.sha }}

      

  deploy:
    # The type of runner that the job will run on
      runs-on: ubuntu-latest
      needs: build-push-image
      #if: false
      steps:
         # Runs a single command using the runners shell
      - uses: actions/checkout@v4
        with:
          repository: 'mojaorganizacjatestowa/GitOpsRepoTST'
          ref: 'main'
          token:  ${{ secrets.TOKEN }}

      - name: Setup git config
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "<>"

      - name: Change deployment config
        run: |
          cd Deployment
          ls
          sed -i 's+omniregistry/back-end.*+omniregistry/back-end:${{ github.sha }}+g' Deploy.yaml                    
          export COMMIT_MESSAGE="DT:${{ github.sha }}:DT"
          echo $COMMIT_MESSAGE
          git add .
          git commit -m "Standard message $COMMIT_MESSAGE"
          git push
